name: CI

on:
  push:
    branches: [ 'latest' ]

  pull_request:
    branches: [ 'latest' ]

concurrency:
  group: rust-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal --component clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install SARIF utils
        run: cargo install clippy-sarif sarif-fmt

      - name: Run clippy
        run: cargo clippy --all-features --message-format=json | clippy-sarif | tee results.sarif | sarif-fmt

      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          wait-for-processing: true

  unit-tests:
    name: Unit tests on ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal --target ${{ matrix.target }}

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo llvm-cov --all-features --workspace --codecov --output-path codecov-unit.json

      - name: Test docs
        run: cargo test --doc

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: codecov-unit-${{ matrix.name }}
          path: codecov-unit.json

      - name: Upload coverage to Codecov
        if: ${{ !startsWith(github.head_ref, 'dependabot/') && !startsWith(github.head_ref, 'renovate/') }}
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: codecov-unit.json
          flags: unit,${{ matrix.name }}
          token: ${{ secrets.CODECOV_TOKEN }}
